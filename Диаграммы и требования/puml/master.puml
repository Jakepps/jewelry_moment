@startuml

MasterListView *-- MasterListController
MasterListView --* MasterListController

MasterListView -> MasterInputForm
MasterListController o-- ListStateNotifier
MasterListController o-- MasterDBDataSource

MasterInputFormControllerCreate o-- MasterDBDataSource
MasterInputFormControllerEdit o-- MasterDBDataSource

MasterInputForm *-- MasterInputFormControllerCreate
MasterInputForm *-- MasterInputFormControllerEdit
MasterInputForm --* MasterInputFormControllerCreate
MasterInputForm --* MasterInputFormControllerEdit
MasterDBDataSource o-- DBClient

class MasterDBDataSource {
  + initialize()
  + add(master: Master): Master
  + change(master: Master): Master
  + delete(id: Integer): void
  + get(id: Integer): Master
  + get_list(page_size: Integer, page_num: Integer, sort_field: String, sort_direction: String, has_father_name: Boolean): List<Master>
  + count(): Integer
}

class DBClient {
  + self.instance(): DBClient
  + query(sql: String): Object
  + last_id(): Integer
}

class MasterListController {
  - view: Object
  - state_notifier: ListStateNotifier
  - master_rep: MasterDBDataSource
  - sort_columns: Array<String>
  - sort_by: String
  - father_name_filter_columns: Array<Boolean>
  - father_name_filter: Boolean
  + on_view_created()
  + show_view()
  + show_modal_add()
  + show_modal_edit(current_page: int, per_page: int, selected_row: int)
  + delete_selected(current_page: int, per_page: int, selected_row: int)
  + refresh_data(page: int, per_page: int)
  + sort(page: int, per_page: int, sort_index: int)
  + filter_father_name(page: int, per_page: int, filter_index: int)
  - on_db_conn_error()
}
class ListStateNotifier {
  - items: Array
  - listeners: Array
  + initialize()
  + set_all(objects: Array)
  + add(object: Object)
  + get(number: Integer): Object
  + delete(object: Object)
  + replace(object: Object, new_object: Object)
  + add_listener(listener: Object)
  + delete_listener(listener: Object)
  - notify_listeners()
}
class MasterDBDataSource {
  + get_list(limit: int, offset: int, sort_by: String, sort_order: String, father_name_filter: Boolean): Array<Master>
  + add(item: Master): Master
  + delete(id: int): void
  + count(): int
}
class MasterInputFormControllerCreate {
  - parent_controller: MasterListController
  - master_rep: MasterDBDataSource
  - view: Object
  + on_view_created()
  + set_view(view: Object)
  + process_fields(fields: Hash<String, String>): void
  - on_db_conn_error()
}
class MasterInputFormControllerEdit {
  - parent_controller: MasterListController
  - item: Master
  - master_rep: MasterDBDataSource
  - view: Object
  + on_view_created()
  + set_view(view: Object)
  + populate_fields(item: Master): void
  - on_db_conn_error()
}
class MasterListView {
  - PAGE_SIZE: integer = 20
  - controller: MasterListController
  - current_page: integer = 1
  - total_count: integer = 0
  - items: Struct[]
  - table: refined_table
  - page_label: label
  + initialize()
  + on_create()
  + update(masters: Master[])
  + update_student_count(new_cnt: integer)
  + create()
}

class MasterInputForm {
  - item: Hash
  - controller: MasterInputFormControllerCreate
  - entries: Hash
  + initialize(controller: MasterInputFormControllerCreate, existing_student: Master)
  + on_create()
  + create()
}




@enduml
